/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['unit/test_easy_domino_model.js']) {
  _$jscoverage['unit/test_easy_domino_model.js'] = [];
  _$jscoverage['unit/test_easy_domino_model.js'][9] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][10] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][11] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][12] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][13] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][17] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][18] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][19] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][20] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][21] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][22] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][23] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][24] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][25] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][27] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][28] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][29] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][30] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][31] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][32] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][33] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][34] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][35] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][37] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][38] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][39] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][40] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][41] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][42] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][43] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][44] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][45] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][46] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][47] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][49] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][50] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][52] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][53] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][54] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][56] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][57] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][59] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][79] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][80] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][81] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][82] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][83] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][85] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][87] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][88] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][89] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][91] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][92] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][94] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][96] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][97] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][99] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][103] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][104] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][105] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][106] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][107] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][108] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][110] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][111] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][112] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][113] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][114] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][115] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][117] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][118] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][119] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][120] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][121] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][122] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][124] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][125] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][126] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][127] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][128] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][129] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][131] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][132] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][133] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][135] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][136] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][138] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][139] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][142] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][143] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][144] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][146] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][147] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][152] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][155] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][158] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][161] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][162] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][164] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][165] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][167] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][168] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][170] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][171] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][176] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][180] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][183] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][184] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][185] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][186] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][187] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][188] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][191] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][194] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][195] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][198] = 0;
  _$jscoverage['unit/test_easy_domino_model.js'][199] = 0;
}
_$jscoverage['unit/test_easy_domino_model.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * @file test_easy_domin_model.js</span>","<span class=\"c\"> * @version 0.1.0</span>","<span class=\"c\"> * @author ginger</span>","<span class=\"c\"> * @brief unit test of easy domino model javascript part</span>","<span class=\"c\"> */</span>"," "," <span class=\"c\">/* unit test of bone class */</span>"," test<span class=\"k\">(</span><span class=\"s\">'bone class'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t <span class=\"k\">var</span> bone <span class=\"k\">=</span> Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>bone <span class=\"k\">!==</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"s\">'instantiate bone object'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>bone<span class=\"k\">.</span>getNum1<span class=\"k\">()</span> <span class=\"k\">===</span>  <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">'get right (smaller) num1 from bone object'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>bone<span class=\"k\">.</span>getNum2<span class=\"k\">()</span> <span class=\"k\">===</span>  <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">'get right (bigger) num2 from bone object'</span><span class=\"k\">);</span>"," <span class=\"k\">}</span><span class=\"k\">);</span>"," "," <span class=\"c\">/* unit test of boneyard class */</span>"," test<span class=\"k\">(</span><span class=\"s\">'boneyard class null create'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t <span class=\"k\">var</span> boneyard \t<span class=\"k\">=</span> Boneyard<span class=\"k\">.</span>createNew<span class=\"k\">();</span>","\t ok<span class=\"k\">(</span>boneyard \t<span class=\"k\">!==</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"s\">'instantiate boneyard object'</span><span class=\"k\">);</span>","\t <span class=\"k\">var</span> _branchends<span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getBranchends<span class=\"k\">(),</span> _branchends<span class=\"k\">),</span> <span class=\"s\">'getBranchends() from null boneyard'</span><span class=\"k\">);</span>","\t <span class=\"k\">var</span> _players\t<span class=\"k\">=</span> <span class=\"k\">[</span>Player<span class=\"k\">.</span>createNew<span class=\"k\">()];</span>","\t ok<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getPlayers<span class=\"k\">()[</span><span class=\"s\">0</span><span class=\"k\">].</span>getPlayerName<span class=\"k\">()</span> <span class=\"k\">===</span> Player<span class=\"k\">.</span>createNew<span class=\"k\">().</span>getPlayerName<span class=\"k\">(),</span> <span class=\"s\">'getPlayers() from null boneyard'</span><span class=\"k\">);</span>","\t <span class=\"k\">var</span> _scores \t<span class=\"k\">=</span> <span class=\"k\">[];</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">(),</span> _scores<span class=\"k\">),</span> <span class=\"s\">'getScores() from null boneyard'</span><span class=\"k\">);</span>"," <span class=\"k\">}</span><span class=\"k\">);</span>"," test<span class=\"k\">(</span><span class=\"s\">'boneyard class not null create'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t <span class=\"k\">var</span> _branchends \t<span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">];</span>","\t <span class=\"k\">var</span> _players \t\t<span class=\"k\">=</span> <span class=\"k\">[</span>Player<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">'jsf'</span><span class=\"k\">),</span> Player<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">'wyq'</span><span class=\"k\">)];</span>","\t <span class=\"k\">var</span> _scores \t\t<span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span> _scores<span class=\"k\">[</span><span class=\"s\">'jsf'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span> _scores<span class=\"k\">[</span><span class=\"s\">'wyq'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">9</span><span class=\"k\">;</span>","\t <span class=\"k\">var</span> boneyard <span class=\"k\">=</span> Boneyard<span class=\"k\">.</span>createNew<span class=\"k\">(</span>_branchends<span class=\"k\">,</span> _players<span class=\"k\">,</span> _scores<span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>boneyard <span class=\"k\">!==</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"s\">'instantiate boneyard object'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getBranchends<span class=\"k\">(),</span> _branchends<span class=\"k\">),</span> <span class=\"s\">'getBranchends() from not null boneyard'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getPlayers<span class=\"k\">()[</span><span class=\"s\">1</span><span class=\"k\">].</span>getPlayerName<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">'wyq'</span><span class=\"k\">,</span> <span class=\"s\">'getPlayers() from not null boneyard'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">(),</span> _scores<span class=\"k\">),</span> <span class=\"s\">'getScores() from not null boneyard'</span><span class=\"k\">);</span>"," <span class=\"k\">}</span><span class=\"k\">);</span>"," test<span class=\"k\">(</span><span class=\"s\">'boneyard class score test'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t <span class=\"k\">var</span> boneyard <span class=\"k\">=</span> Boneyard<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">(),</span> <span class=\"k\">[]),</span> <span class=\"s\">'scores initialization'</span><span class=\"k\">);</span>","\t boneyard<span class=\"k\">.</span>scoreTo<span class=\"k\">(</span><span class=\"s\">'player1'</span><span class=\"k\">,</span> <span class=\"s\">19</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">()[</span><span class=\"s\">'player1'</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">19</span><span class=\"k\">,</span> <span class=\"s\">'score increasement'</span><span class=\"k\">);</span>","\t boneyard<span class=\"k\">.</span>scoreTo<span class=\"k\">(</span><span class=\"s\">'player1'</span><span class=\"k\">,</span> <span class=\"k\">-</span><span class=\"s\">10</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">()[</span><span class=\"s\">'player1'</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">9</span><span class=\"k\">,</span> <span class=\"s\">'score decreasement'</span><span class=\"k\">);</span>","\t boneyard<span class=\"k\">.</span>scoreTo<span class=\"k\">(</span><span class=\"s\">'player1'</span><span class=\"k\">,</span> <span class=\"s\">10.4</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">()[</span><span class=\"s\">'player1'</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">19</span><span class=\"k\">,</span> <span class=\"s\">'score add float'</span><span class=\"k\">);</span>","\t boneyard<span class=\"k\">.</span>scoreTo<span class=\"k\">(</span><span class=\"s\">'player1'</span><span class=\"k\">,</span> <span class=\"k\">-</span><span class=\"s\">10.9</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">()[</span><span class=\"s\">'player1'</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">9</span><span class=\"k\">,</span> <span class=\"s\">'score minus float'</span><span class=\"k\">);</span>"," <span class=\"k\">}</span><span class=\"k\">);</span>"," test<span class=\"k\">(</span><span class=\"s\">'boneyard class send bone test'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t <span class=\"k\">var</span> boneyard <span class=\"k\">=</span> Boneyard<span class=\"k\">.</span>createNew<span class=\"k\">();</span>","\t ","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">(),</span> <span class=\"k\">[]),</span> <span class=\"s\">'scores initialization'</span><span class=\"k\">);</span>","\t <span class=\"k\">var</span> _branchends <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getBranchends<span class=\"k\">(),</span> _branchends<span class=\"k\">),</span> <span class=\"s\">'branchends initialization'</span><span class=\"k\">);</span>","\t ","\t boneyard<span class=\"k\">.</span>sendToBranchend<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">),</span> <span class=\"s\">'h'</span><span class=\"k\">,</span> <span class=\"s\">'player1'</span><span class=\"k\">);</span>","\t _branchends1\t<span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">6</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","\t <span class=\"c\">//ok(arrayEquals(boneyard.getBranchends(), _branchends1), 'branchend change');</span>","\t ok<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">()[</span><span class=\"s\">'player1'</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">'score change'</span><span class=\"k\">);</span>","\t ","\t <span class=\"c\">/*</span>","<span class=\"c\">\t boneyard.sendToBranchend(0, Bone.createNew(1, 6), 'h', 'player1');</span>","<span class=\"c\">\t _branchends2\t= [1, 0];</span>","<span class=\"c\">\t ok(arrayEquals(boneyard.getBranchends(), _branchends2), 'branchend change');</span>","<span class=\"c\">\t </span>","<span class=\"c\">\t boneyard.sendToBranchend(0, Bone.createNew(1, 1), 'v', 'player1');</span>","<span class=\"c\">\t _branchends3\t= [1, 0, 1];</span>","<span class=\"c\">\t ok(arrayEquals(boneyard.getBranchends(), _branchends3), 'branchend spinner change');</span>","<span class=\"c\">\t </span>","<span class=\"c\">\t raises(function () { boneyard.sendToBranchend(0, Bone.createNew(1, 1), 'o', 'player1'); }</span>","<span class=\"c\">\t\t, function (err) { return err.message === 'Wrong direction !'; }</span>","<span class=\"c\">\t\t, 'send bone in wrong direction');</span>","<span class=\"c\">\t ok(arrayEquals(boneyard.getBranchends(), _branchends3), 'branchend after wrong opeartion');</span>","<span class=\"c\">\t </span>","<span class=\"c\">\t raises(function () { boneyard.sendToBranchend(0, Bone.createNew(6, 6), 'v', 'player1'); }</span>","<span class=\"c\">\t\t, function (err) { return err.message === 'Wrong bone !'; }</span>","<span class=\"c\">\t\t, 'send bone in wrong direction');*/</span>"," <span class=\"k\">}</span><span class=\"k\">);</span>"," test<span class=\"k\">(</span><span class=\"s\">'boneyard class strategy test'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t <span class=\"k\">var</span> strategy <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","\t strategy<span class=\"k\">.</span>getScoreForSend <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>branchendIndex<span class=\"k\">,</span> bone<span class=\"k\">,</span> direct<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t <span class=\"k\">if</span> <span class=\"k\">(</span>direct <span class=\"k\">===</span> <span class=\"s\">'h'</span><span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t\t <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"s\">2</span><span class=\"k\">;</span>","\t <span class=\"k\">}</span><span class=\"k\">;</span>","\t <span class=\"k\">var</span> boneyard <span class=\"k\">=</span> Boneyard<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> strategy<span class=\"k\">);</span>","\t ","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">(),</span> <span class=\"k\">[]),</span> <span class=\"s\">'scores initialization'</span><span class=\"k\">);</span>","\t <span class=\"k\">var</span> _branchends <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getBranchends<span class=\"k\">(),</span> _branchends<span class=\"k\">),</span> <span class=\"s\">'branchends initialization'</span><span class=\"k\">);</span>","\t ","\t boneyard<span class=\"k\">.</span>sendToBranchend<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">),</span> <span class=\"s\">'h'</span><span class=\"k\">,</span> <span class=\"s\">'player1'</span><span class=\"k\">);</span>","\t _branchends1\t<span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">6</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","\t <span class=\"c\">//ok(arrayEquals(boneyard.getBranchends(), _branchends1), 'branchend change');</span>","\t ok<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">()[</span><span class=\"s\">'player1'</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">'score change'</span><span class=\"k\">);</span>","\t ","\t boneyard<span class=\"k\">.</span>sendToBranchend<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">6</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">),</span> <span class=\"s\">'v'</span><span class=\"k\">,</span> <span class=\"s\">'player1'</span><span class=\"k\">);</span>","\t _branchends2\t<span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">6</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">];</span>","\t <span class=\"c\">//ok(arrayEquals(boneyard.getBranchends(), _branchends2), 'branchend spinner change');</span>","\t ok<span class=\"k\">(</span>boneyard<span class=\"k\">.</span>getScores<span class=\"k\">()[</span><span class=\"s\">'player1'</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">3</span><span class=\"k\">,</span> <span class=\"s\">'score change'</span><span class=\"k\">);</span>"," <span class=\"k\">}</span><span class=\"k\">);</span>"," "," <span class=\"c\">/* unit test of player class */</span>"," test<span class=\"k\">(</span><span class=\"s\">'player class null create'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t <span class=\"k\">var</span> player <span class=\"k\">=</span> Player<span class=\"k\">.</span>createNew<span class=\"k\">();</span>","\t ok<span class=\"k\">(</span>player <span class=\"k\">!==</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"s\">'instantiate player object'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerName<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">'player1'</span><span class=\"k\">,</span> <span class=\"s\">'getPlayerName() from null player'</span><span class=\"k\">);</span>","\t <span class=\"k\">var</span> _bones <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerBones<span class=\"k\">(),</span> _bones<span class=\"k\">),</span> <span class=\"s\">'getPlayerBones() from null player'</span><span class=\"k\">);</span>"," <span class=\"k\">}</span><span class=\"k\">);</span>"," test<span class=\"k\">(</span><span class=\"s\">'player class part null create'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t <span class=\"k\">var</span> player <span class=\"k\">=</span> Player<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">'player9'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>player <span class=\"k\">!==</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"s\">'instantiate player object'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerName<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">'player9'</span><span class=\"k\">,</span> <span class=\"s\">'getPlayerName() from null player'</span><span class=\"k\">);</span>","\t <span class=\"k\">var</span> _bones <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerBones<span class=\"k\">(),</span> _bones<span class=\"k\">),</span> <span class=\"s\">'getPlayerBones() from null player'</span><span class=\"k\">);</span>"," <span class=\"k\">}</span><span class=\"k\">);</span>"," test<span class=\"k\">(</span><span class=\"s\">'player class not null create'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t <span class=\"k\">var</span> _bones <span class=\"k\">=</span> <span class=\"k\">[</span>Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">),</span> Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">)];</span>","\t <span class=\"k\">var</span> player <span class=\"k\">=</span> Player<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">'jsf'</span><span class=\"k\">,</span> _bones<span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>player <span class=\"k\">!==</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"s\">'instantiate player object'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerName<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">'jsf'</span><span class=\"k\">,</span> <span class=\"s\">'getPlayerName() from not null player'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerBones<span class=\"k\">(),</span> _bones<span class=\"k\">),</span> <span class=\"s\">'getPlayerBones() from not null player'</span><span class=\"k\">);</span>"," <span class=\"k\">}</span><span class=\"k\">);</span>"," test<span class=\"k\">(</span><span class=\"s\">'player class bones in hand test'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t <span class=\"k\">var</span> _bones <span class=\"k\">=</span> <span class=\"k\">[</span>Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">),</span> Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">)];</span>","\t <span class=\"k\">var</span> player <span class=\"k\">=</span> Player<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">'jsf'</span><span class=\"k\">,</span> _bones<span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>player <span class=\"k\">!==</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"s\">'instantiate player object'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerName<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">'jsf'</span><span class=\"k\">,</span> <span class=\"s\">'getPlayerName() from not null player'</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerBones<span class=\"k\">(),</span> _bones<span class=\"k\">),</span> <span class=\"s\">'getPlayerBones() from not null player'</span><span class=\"k\">);</span>","\t ","\t player<span class=\"k\">.</span>addBones<span class=\"k\">([</span>Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">),</span> Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">)]);</span>","\t <span class=\"k\">var</span> _bones1 <span class=\"k\">=</span> <span class=\"k\">[</span>Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">),</span> Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">),</span> Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">),</span> Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">)];</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerBones<span class=\"k\">(),</span> _bones1<span class=\"k\">),</span> <span class=\"s\">'add bones'</span><span class=\"k\">);</span>","\t ","\t player<span class=\"k\">.</span>setBones<span class=\"k\">(</span>_bones<span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerBones<span class=\"k\">(),</span> _bones<span class=\"k\">),</span> <span class=\"s\">'set bones'</span><span class=\"k\">);</span>","\t ","\t raises<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> player<span class=\"k\">.</span>setBones<span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">);</span> <span class=\"k\">}</span>","\t\t<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> err<span class=\"k\">.</span>message <span class=\"k\">===</span> <span class=\"s\">'Wrong new bones !'</span><span class=\"k\">;</span> <span class=\"k\">}</span>","\t\t<span class=\"k\">,</span> <span class=\"s\">'set bones to null'</span><span class=\"k\">);</span>","\t ","\t player<span class=\"k\">.</span>removeBone<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">);</span>","\t <span class=\"k\">var</span> _bones2 <span class=\"k\">=</span> <span class=\"k\">[</span>Bone<span class=\"k\">.</span>createNew<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">)];</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerBones<span class=\"k\">(),</span> _bones2<span class=\"k\">),</span> <span class=\"s\">'remove bones'</span><span class=\"k\">);</span>","\t ","\t player<span class=\"k\">.</span>removeBone<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">);</span>","\t ok<span class=\"k\">(</span>arrayEquals<span class=\"k\">(</span>player<span class=\"k\">.</span>getPlayerBones<span class=\"k\">(),</span> <span class=\"k\">[]),</span> <span class=\"s\">'remove all bones'</span><span class=\"k\">);</span>"," <span class=\"k\">}</span><span class=\"k\">);</span>"," "," <span class=\"c\">/* unit test for strategy implementation in js */</span>"," <span class=\"c\">/* test class */</span>"," <span class=\"k\">var</span> StrategyTest  <span class=\"k\">=</span> <span class=\"k\">{</span>","\tcreateNew<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>strategy<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">// create</span>","\t\t<span class=\"k\">var</span> object <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t\t","\t\t<span class=\"c\">// private</span>","\t\t<span class=\"k\">var</span> param1<span class=\"k\">;</span>","\t\t","\t\t<span class=\"c\">// public</span>","\t\tobject<span class=\"k\">.</span>method1 <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> ","\t\t\t<span class=\"k\">return</span> strategy<span class=\"k\">.</span>doBeforeSend<span class=\"k\">();</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\tobject<span class=\"k\">.</span>method2 <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\tstrategy<span class=\"k\">.</span>doAfterBlock<span class=\"k\">();</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\tobject<span class=\"k\">.</span>getParam1 <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> param1<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\tobject<span class=\"k\">.</span>method3 <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\tparam1 <span class=\"k\">=</span> strategy<span class=\"k\">.</span>doBeforeSend<span class=\"k\">();</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t","\t\t<span class=\"c\">// constructor</span>","\t\t<span class=\"k\">{</span>","\t\t\tparam1 <span class=\"k\">=</span> <span class=\"s\">9</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t\t","\t\t<span class=\"c\">// return</span>","\t\t<span class=\"k\">return</span> object<span class=\"k\">;</span>","\t<span class=\"k\">}</span>"," <span class=\"k\">}</span><span class=\"k\">;</span>"," test<span class=\"k\">(</span><span class=\"s\">'strategy implementation test'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t <span class=\"k\">var</span> strategy\t\t\t<span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","\t strategy<span class=\"k\">.</span>doBeforeSend \t<span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"s\">19</span><span class=\"k\">;</span> <span class=\"k\">}</span><span class=\"k\">;</span>","\t strategy<span class=\"k\">.</span>doAfterBlock \t<span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> param1 <span class=\"k\">=</span> <span class=\"s\">19</span><span class=\"k\">;</span> <span class=\"k\">}</span><span class=\"k\">;</span>","\t strategy<span class=\"k\">.</span>doAfterSend \t<span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> privateMethod<span class=\"k\">();</span> <span class=\"k\">}</span><span class=\"k\">;</span>","\t <span class=\"k\">var</span> strategyTest\t\t<span class=\"k\">=</span> StrategyTest<span class=\"k\">.</span>createNew<span class=\"k\">(</span>strategy<span class=\"k\">);</span>","\t ","\t <span class=\"c\">// strategy try 1, return directly</span>","\t ok<span class=\"k\">(</span>strategyTest<span class=\"k\">.</span>method1<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">19</span><span class=\"k\">,</span> <span class=\"s\">'strategy implementation 1'</span><span class=\"k\">);</span>","\t ","\t <span class=\"c\">// strategy try 2, operate private attribute</span>","\t strategyTest<span class=\"k\">.</span>method2<span class=\"k\">();</span>","\t ok<span class=\"k\">(</span>strategyTest<span class=\"k\">.</span>getParam1<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">9</span><span class=\"k\">,</span> <span class=\"s\">'strategy not implementation 2'</span><span class=\"k\">);</span>","\t ","\t <span class=\"c\">// strategy try 3, operate private attribute by private = strategy.method()</span>","\t strategyTest<span class=\"k\">.</span>method3<span class=\"k\">();</span>","\t ok<span class=\"k\">(</span>strategyTest<span class=\"k\">.</span>getParam1<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">19</span><span class=\"k\">,</span> <span class=\"s\">'strategy implementation 3'</span><span class=\"k\">);</span>"," <span class=\"k\">}</span><span class=\"k\">);</span>"," "];
_$jscoverage['unit/test_easy_domino_model.js'][9]++;
test("bone class", (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][10]++;
  var bone = Bone.createNew(2, 1);
  _$jscoverage['unit/test_easy_domino_model.js'][11]++;
  ok((bone !== null), "instantiate bone object");
  _$jscoverage['unit/test_easy_domino_model.js'][12]++;
  ok((bone.getNum1() === 1), "get right (smaller) num1 from bone object");
  _$jscoverage['unit/test_easy_domino_model.js'][13]++;
  ok((bone.getNum2() === 2), "get right (bigger) num2 from bone object");
}));
_$jscoverage['unit/test_easy_domino_model.js'][17]++;
test("boneyard class null create", (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][18]++;
  var boneyard = Boneyard.createNew();
  _$jscoverage['unit/test_easy_domino_model.js'][19]++;
  ok((boneyard !== null), "instantiate boneyard object");
  _$jscoverage['unit/test_easy_domino_model.js'][20]++;
  var _branchends = [0, 0];
  _$jscoverage['unit/test_easy_domino_model.js'][21]++;
  ok(arrayEquals(boneyard.getBranchends(), _branchends), "getBranchends() from null boneyard");
  _$jscoverage['unit/test_easy_domino_model.js'][22]++;
  var _players = [Player.createNew()];
  _$jscoverage['unit/test_easy_domino_model.js'][23]++;
  ok((boneyard.getPlayers()[0].getPlayerName() === Player.createNew().getPlayerName()), "getPlayers() from null boneyard");
  _$jscoverage['unit/test_easy_domino_model.js'][24]++;
  var _scores = [];
  _$jscoverage['unit/test_easy_domino_model.js'][25]++;
  ok(arrayEquals(boneyard.getScores(), _scores), "getScores() from null boneyard");
}));
_$jscoverage['unit/test_easy_domino_model.js'][27]++;
test("boneyard class not null create", (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][28]++;
  var _branchends = [1, 6];
  _$jscoverage['unit/test_easy_domino_model.js'][29]++;
  var _players = [Player.createNew("jsf"), Player.createNew("wyq")];
  _$jscoverage['unit/test_easy_domino_model.js'][30]++;
  var _scores = new Array();
  _$jscoverage['unit/test_easy_domino_model.js'][30]++;
  _scores.jsf = 1;
  _$jscoverage['unit/test_easy_domino_model.js'][30]++;
  _scores.wyq = 9;
  _$jscoverage['unit/test_easy_domino_model.js'][31]++;
  var boneyard = Boneyard.createNew(_branchends, _players, _scores);
  _$jscoverage['unit/test_easy_domino_model.js'][32]++;
  ok((boneyard !== null), "instantiate boneyard object");
  _$jscoverage['unit/test_easy_domino_model.js'][33]++;
  ok(arrayEquals(boneyard.getBranchends(), _branchends), "getBranchends() from not null boneyard");
  _$jscoverage['unit/test_easy_domino_model.js'][34]++;
  ok((boneyard.getPlayers()[1].getPlayerName() === "wyq"), "getPlayers() from not null boneyard");
  _$jscoverage['unit/test_easy_domino_model.js'][35]++;
  ok(arrayEquals(boneyard.getScores(), _scores), "getScores() from not null boneyard");
}));
_$jscoverage['unit/test_easy_domino_model.js'][37]++;
test("boneyard class score test", (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][38]++;
  var boneyard = Boneyard.createNew(null, null, null);
  _$jscoverage['unit/test_easy_domino_model.js'][39]++;
  ok(arrayEquals(boneyard.getScores(), []), "scores initialization");
  _$jscoverage['unit/test_easy_domino_model.js'][40]++;
  boneyard.scoreTo("player1", 19);
  _$jscoverage['unit/test_easy_domino_model.js'][41]++;
  ok((boneyard.getScores().player1 === 19), "score increasement");
  _$jscoverage['unit/test_easy_domino_model.js'][42]++;
  boneyard.scoreTo("player1", -10);
  _$jscoverage['unit/test_easy_domino_model.js'][43]++;
  ok((boneyard.getScores().player1 === 9), "score decreasement");
  _$jscoverage['unit/test_easy_domino_model.js'][44]++;
  boneyard.scoreTo("player1", 10.4);
  _$jscoverage['unit/test_easy_domino_model.js'][45]++;
  ok((boneyard.getScores().player1 === 19), "score add float");
  _$jscoverage['unit/test_easy_domino_model.js'][46]++;
  boneyard.scoreTo("player1", -10.9);
  _$jscoverage['unit/test_easy_domino_model.js'][47]++;
  ok((boneyard.getScores().player1 === 9), "score minus float");
}));
_$jscoverage['unit/test_easy_domino_model.js'][49]++;
test("boneyard class send bone test", (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][50]++;
  var boneyard = Boneyard.createNew();
  _$jscoverage['unit/test_easy_domino_model.js'][52]++;
  ok(arrayEquals(boneyard.getScores(), []), "scores initialization");
  _$jscoverage['unit/test_easy_domino_model.js'][53]++;
  var _branchends = [0, 0];
  _$jscoverage['unit/test_easy_domino_model.js'][54]++;
  ok(arrayEquals(boneyard.getBranchends(), _branchends), "branchends initialization");
  _$jscoverage['unit/test_easy_domino_model.js'][56]++;
  boneyard.sendToBranchend(0, Bone.createNew(0, 6), "h", "player1");
  _$jscoverage['unit/test_easy_domino_model.js'][57]++;
  _branchends1 = [6, 0];
  _$jscoverage['unit/test_easy_domino_model.js'][59]++;
  ok((boneyard.getScores().player1 === 1), "score change");
}));
_$jscoverage['unit/test_easy_domino_model.js'][79]++;
test("boneyard class strategy test", (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][80]++;
  var strategy = new Object();
  _$jscoverage['unit/test_easy_domino_model.js'][81]++;
  strategy.getScoreForSend = (function (branchendIndex, bone, direct) {
  _$jscoverage['unit/test_easy_domino_model.js'][82]++;
  if ((direct === "h")) {
    _$jscoverage['unit/test_easy_domino_model.js'][82]++;
    return 1;
  }
  else {
    _$jscoverage['unit/test_easy_domino_model.js'][83]++;
    return 2;
  }
});
  _$jscoverage['unit/test_easy_domino_model.js'][85]++;
  var boneyard = Boneyard.createNew(null, null, null, strategy);
  _$jscoverage['unit/test_easy_domino_model.js'][87]++;
  ok(arrayEquals(boneyard.getScores(), []), "scores initialization");
  _$jscoverage['unit/test_easy_domino_model.js'][88]++;
  var _branchends = [0, 0];
  _$jscoverage['unit/test_easy_domino_model.js'][89]++;
  ok(arrayEquals(boneyard.getBranchends(), _branchends), "branchends initialization");
  _$jscoverage['unit/test_easy_domino_model.js'][91]++;
  boneyard.sendToBranchend(0, Bone.createNew(0, 6), "h", "player1");
  _$jscoverage['unit/test_easy_domino_model.js'][92]++;
  _branchends1 = [6, 0];
  _$jscoverage['unit/test_easy_domino_model.js'][94]++;
  ok((boneyard.getScores().player1 === 1), "score change");
  _$jscoverage['unit/test_easy_domino_model.js'][96]++;
  boneyard.sendToBranchend(0, Bone.createNew(6, 6), "v", "player1");
  _$jscoverage['unit/test_easy_domino_model.js'][97]++;
  _branchends2 = [6, 0, 6];
  _$jscoverage['unit/test_easy_domino_model.js'][99]++;
  ok((boneyard.getScores().player1 === 3), "score change");
}));
_$jscoverage['unit/test_easy_domino_model.js'][103]++;
test("player class null create", (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][104]++;
  var player = Player.createNew();
  _$jscoverage['unit/test_easy_domino_model.js'][105]++;
  ok((player !== null), "instantiate player object");
  _$jscoverage['unit/test_easy_domino_model.js'][106]++;
  ok((player.getPlayerName() === "player1"), "getPlayerName() from null player");
  _$jscoverage['unit/test_easy_domino_model.js'][107]++;
  var _bones = [];
  _$jscoverage['unit/test_easy_domino_model.js'][108]++;
  ok(arrayEquals(player.getPlayerBones(), _bones), "getPlayerBones() from null player");
}));
_$jscoverage['unit/test_easy_domino_model.js'][110]++;
test("player class part null create", (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][111]++;
  var player = Player.createNew("player9");
  _$jscoverage['unit/test_easy_domino_model.js'][112]++;
  ok((player !== null), "instantiate player object");
  _$jscoverage['unit/test_easy_domino_model.js'][113]++;
  ok((player.getPlayerName() === "player9"), "getPlayerName() from null player");
  _$jscoverage['unit/test_easy_domino_model.js'][114]++;
  var _bones = [];
  _$jscoverage['unit/test_easy_domino_model.js'][115]++;
  ok(arrayEquals(player.getPlayerBones(), _bones), "getPlayerBones() from null player");
}));
_$jscoverage['unit/test_easy_domino_model.js'][117]++;
test("player class not null create", (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][118]++;
  var _bones = [Bone.createNew(0, 1), Bone.createNew(1, 6)];
  _$jscoverage['unit/test_easy_domino_model.js'][119]++;
  var player = Player.createNew("jsf", _bones);
  _$jscoverage['unit/test_easy_domino_model.js'][120]++;
  ok((player !== null), "instantiate player object");
  _$jscoverage['unit/test_easy_domino_model.js'][121]++;
  ok((player.getPlayerName() === "jsf"), "getPlayerName() from not null player");
  _$jscoverage['unit/test_easy_domino_model.js'][122]++;
  ok(arrayEquals(player.getPlayerBones(), _bones), "getPlayerBones() from not null player");
}));
_$jscoverage['unit/test_easy_domino_model.js'][124]++;
test("player class bones in hand test", (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][125]++;
  var _bones = [Bone.createNew(0, 1), Bone.createNew(1, 6)];
  _$jscoverage['unit/test_easy_domino_model.js'][126]++;
  var player = Player.createNew("jsf", _bones);
  _$jscoverage['unit/test_easy_domino_model.js'][127]++;
  ok((player !== null), "instantiate player object");
  _$jscoverage['unit/test_easy_domino_model.js'][128]++;
  ok((player.getPlayerName() === "jsf"), "getPlayerName() from not null player");
  _$jscoverage['unit/test_easy_domino_model.js'][129]++;
  ok(arrayEquals(player.getPlayerBones(), _bones), "getPlayerBones() from not null player");
  _$jscoverage['unit/test_easy_domino_model.js'][131]++;
  player.addBones([Bone.createNew(0, 1), Bone.createNew(1, 6)]);
  _$jscoverage['unit/test_easy_domino_model.js'][132]++;
  var _bones1 = [Bone.createNew(0, 1), Bone.createNew(1, 6), Bone.createNew(0, 1), Bone.createNew(1, 6)];
  _$jscoverage['unit/test_easy_domino_model.js'][133]++;
  ok(arrayEquals(player.getPlayerBones(), _bones1), "add bones");
  _$jscoverage['unit/test_easy_domino_model.js'][135]++;
  player.setBones(_bones);
  _$jscoverage['unit/test_easy_domino_model.js'][136]++;
  ok(arrayEquals(player.getPlayerBones(), _bones), "set bones");
  _$jscoverage['unit/test_easy_domino_model.js'][138]++;
  raises((function () {
  _$jscoverage['unit/test_easy_domino_model.js'][138]++;
  player.setBones(null);
}), (function (err) {
  _$jscoverage['unit/test_easy_domino_model.js'][139]++;
  return (err.message === "Wrong new bones !");
}), "set bones to null");
  _$jscoverage['unit/test_easy_domino_model.js'][142]++;
  player.removeBone(0);
  _$jscoverage['unit/test_easy_domino_model.js'][143]++;
  var _bones2 = [Bone.createNew(1, 6)];
  _$jscoverage['unit/test_easy_domino_model.js'][144]++;
  ok(arrayEquals(player.getPlayerBones(), _bones2), "remove bones");
  _$jscoverage['unit/test_easy_domino_model.js'][146]++;
  player.removeBone(0);
  _$jscoverage['unit/test_easy_domino_model.js'][147]++;
  ok(arrayEquals(player.getPlayerBones(), []), "remove all bones");
}));
_$jscoverage['unit/test_easy_domino_model.js'][152]++;
var StrategyTest = {createNew: (function (strategy) {
  _$jscoverage['unit/test_easy_domino_model.js'][155]++;
  var object = {};
  _$jscoverage['unit/test_easy_domino_model.js'][158]++;
  var param1;
  _$jscoverage['unit/test_easy_domino_model.js'][161]++;
  object.method1 = (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][162]++;
  return strategy.doBeforeSend();
});
  _$jscoverage['unit/test_easy_domino_model.js'][164]++;
  object.method2 = (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][165]++;
  strategy.doAfterBlock();
});
  _$jscoverage['unit/test_easy_domino_model.js'][167]++;
  object.getParam1 = (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][168]++;
  return param1;
});
  _$jscoverage['unit/test_easy_domino_model.js'][170]++;
  object.method3 = (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][171]++;
  param1 = strategy.doBeforeSend();
});
  _$jscoverage['unit/test_easy_domino_model.js'][176]++;
  param1 = 9;
  _$jscoverage['unit/test_easy_domino_model.js'][180]++;
  return object;
})};
_$jscoverage['unit/test_easy_domino_model.js'][183]++;
test("strategy implementation test", (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][184]++;
  var strategy = new Object();
  _$jscoverage['unit/test_easy_domino_model.js'][185]++;
  strategy.doBeforeSend = (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][185]++;
  return 19;
});
  _$jscoverage['unit/test_easy_domino_model.js'][186]++;
  strategy.doAfterBlock = (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][186]++;
  param1 = 19;
});
  _$jscoverage['unit/test_easy_domino_model.js'][187]++;
  strategy.doAfterSend = (function () {
  _$jscoverage['unit/test_easy_domino_model.js'][187]++;
  privateMethod();
});
  _$jscoverage['unit/test_easy_domino_model.js'][188]++;
  var strategyTest = StrategyTest.createNew(strategy);
  _$jscoverage['unit/test_easy_domino_model.js'][191]++;
  ok((strategyTest.method1() === 19), "strategy implementation 1");
  _$jscoverage['unit/test_easy_domino_model.js'][194]++;
  strategyTest.method2();
  _$jscoverage['unit/test_easy_domino_model.js'][195]++;
  ok((strategyTest.getParam1() === 9), "strategy not implementation 2");
  _$jscoverage['unit/test_easy_domino_model.js'][198]++;
  strategyTest.method3();
  _$jscoverage['unit/test_easy_domino_model.js'][199]++;
  ok((strategyTest.getParam1() === 19), "strategy implementation 3");
}));
