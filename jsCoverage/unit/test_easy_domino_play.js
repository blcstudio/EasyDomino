/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['unit/test_easy_domino_play.js']) {
  _$jscoverage['unit/test_easy_domino_play.js'] = [];
  _$jscoverage['unit/test_easy_domino_play.js'][10] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][11] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][12] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][13] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][14] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][15] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][16] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][17] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][19] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][20] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][21] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][34] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][35] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][36] = 0;
  _$jscoverage['unit/test_easy_domino_play.js'][37] = 0;
}
_$jscoverage['unit/test_easy_domino_play.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * @file test_easy_domin_play.js</span>","<span class=\"c\"> * @version 0.2.0</span>","<span class=\"c\"> * @author ginger</span>","<span class=\"c\"> * @brief unit test of easy domino gameplay javascript part</span>","<span class=\"c\"> */</span>","","<span class=\"c\">// for rewritten version 0.2.0 gameplay part</span>","<span class=\"c\">/* unit test of get random */</span>","test<span class=\"k\">(</span><span class=\"s\">'get random with range'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> min <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">,</span> max <span class=\"k\">=</span> <span class=\"s\">19</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> well <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> _well <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> <span class=\"s\">1000</span><span class=\"k\">;</span> i <span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> num <span class=\"k\">=</span> getRandom<span class=\"k\">(</span>min<span class=\"k\">,</span> max<span class=\"k\">);</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>num <span class=\"k\">&gt;</span> max <span class=\"k\">||</span> num <span class=\"k\">&lt;</span> min<span class=\"k\">)</span> well <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t_well<span class=\"k\">[</span>num<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span>","\tok<span class=\"k\">(</span>well<span class=\"k\">,</span> <span class=\"s\">'random in range '</span> <span class=\"k\">+</span> min <span class=\"k\">+</span> <span class=\"s\">' - '</span> <span class=\"k\">+</span> max<span class=\"k\">);</span>","\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> min<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> max<span class=\"k\">;</span> i <span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\tok<span class=\"k\">(</span><span class=\"k\">typeof</span><span class=\"k\">(</span>_well<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">!==</span> <span class=\"s\">'undefined'</span> <span class=\"k\">&amp;&amp;</span> _well<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"s\">'has random = '</span> <span class=\"k\">+</span> i<span class=\"k\">);</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"c\">/* unit test of bind part </span>","<span class=\"c\">test('bind value to block', function () {</span>","<span class=\"c\">\tbindValueToArea(0, 0, 10, 10, 'value');</span>","<span class=\"c\">\tok(getBindValueFromArea\t(0, 0) === null\t\t, 'get value from corner');</span>","<span class=\"c\">\tok(getBindValueFromArea\t(0, 1) === null\t\t, 'get value from border');</span>","<span class=\"c\">\tok(getBindValueFromArea\t(9, 9) === 'value'\t, 'get value from area');</span>","<span class=\"c\">\tok(removeBindValue\t\t(9, 9) === 'value'\t, 'get removed value');</span>","<span class=\"c\">\tok(getBindValueFromArea\t(9, 9) === null\t\t, 'value removed');</span>","<span class=\"c\">});*/</span>","<span class=\"c\">/* unit test of initialization */</span>","test<span class=\"k\">(</span><span class=\"s\">'initialize gameplay'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\tgetGlobalSettings<span class=\"k\">();</span>","\tinitGamePlay<span class=\"k\">();</span>","\tok<span class=\"k\">(</span>global<span class=\"k\">.</span>boneHolder<span class=\"k\">.</span>getPlayerBones<span class=\"k\">().</span>length <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"s\">28</span> <span class=\"k\">-</span> global<span class=\"k\">.</span>playerBeginningBoneNum<span class=\"k\">)</span> <span class=\"k\">*</span> global<span class=\"k\">.</span>playerNameList<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">'bones number right'</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['unit/test_easy_domino_play.js'][10]++;
test("get random with range", (function () {
  _$jscoverage['unit/test_easy_domino_play.js'][11]++;
  var min = 1, max = 19;
  _$jscoverage['unit/test_easy_domino_play.js'][12]++;
  var well = true;
  _$jscoverage['unit/test_easy_domino_play.js'][13]++;
  var _well = [];
  _$jscoverage['unit/test_easy_domino_play.js'][14]++;
  for (var i = 0; (i < 1000); (i++)) {
    _$jscoverage['unit/test_easy_domino_play.js'][15]++;
    var num = getRandom(min, max);
    _$jscoverage['unit/test_easy_domino_play.js'][16]++;
    if (((num > max) || (num < min))) {
      _$jscoverage['unit/test_easy_domino_play.js'][16]++;
      well = false;
    }
    _$jscoverage['unit/test_easy_domino_play.js'][17]++;
    _well[num] = true;
}
  _$jscoverage['unit/test_easy_domino_play.js'][19]++;
  ok(well, ("random in range " + min + " - " + max));
  _$jscoverage['unit/test_easy_domino_play.js'][20]++;
  for (var i = min; (i < max); (i++)) {
    _$jscoverage['unit/test_easy_domino_play.js'][21]++;
    ok((((typeof _well[i]) !== "undefined") && (_well[i] === true)), ("has random = " + i));
}
}));
_$jscoverage['unit/test_easy_domino_play.js'][34]++;
test("initialize gameplay", (function () {
  _$jscoverage['unit/test_easy_domino_play.js'][35]++;
  getGlobalSettings();
  _$jscoverage['unit/test_easy_domino_play.js'][36]++;
  initGamePlay();
  _$jscoverage['unit/test_easy_domino_play.js'][37]++;
  ok((global.boneHolder.getPlayerBones().length = ((28 - global.playerBeginningBoneNum) * global.playerNameList.length)), "bones number right");
}));
